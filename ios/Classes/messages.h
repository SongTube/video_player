// Autogenerated from Pigeon (v1.0.7), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class FLTTextureMessage;
@class FLTLoopingMessage;
@class FLTVolumeMessage;
@class FLTPlaybackSpeedMessage;
@class FLTPositionMessage;
@class FLTStringMessage;
@class FLTCreateMessage;
@class FLTMixWithOthersMessage;

@interface FLTTextureMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@end

@interface FLTLoopingMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, strong, nullable) NSNumber * isLooping;
@end

@interface FLTVolumeMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, strong, nullable) NSNumber * volume;
@end

@interface FLTPlaybackSpeedMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, strong, nullable) NSNumber * speed;
@end

@interface FLTPositionMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, strong, nullable) NSNumber * position;
@end

@interface FLTStringMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, copy, nullable) NSString * text;
@end

@interface FLTCreateMessage : NSObject
@property(nonatomic, copy, nullable) NSString * videoAsset;
@property(nonatomic, copy, nullable) NSString * audioAsset;
@property(nonatomic, copy, nullable) NSString * videoUri;
@property(nonatomic, copy, nullable) NSString * audioUri;
@property(nonatomic, copy, nullable) NSString * packageName;
@property(nonatomic, copy, nullable) NSString * formatHint;
@property(nonatomic, strong, nullable) NSDictionary<NSString *, NSString *> * httpHeaders;
@end

@interface FLTMixWithOthersMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * mixWithOthers;
@end

/// The codec used by FLTVideoPlayerApi.
NSObject<FlutterMessageCodec> *FLTVideoPlayerApiGetCodec(void);

@protocol FLTVideoPlayerApi
- (void)initializeWithError:(FlutterError *_Nullable *_Nonnull)error;
- (nullable FLTTextureMessage *)createMsg:(FLTCreateMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)disposeMsg:(FLTTextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setLoopingMsg:(FLTLoopingMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setVolumeMsg:(FLTVolumeMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setPlaybackSpeedMsg:(FLTPlaybackSpeedMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)playMsg:(FLTTextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable FLTPositionMessage *)positionMsg:(FLTTextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setVideoUrlMsg:(FLTStringMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setAudioUrlMsg:(FLTStringMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)seekToMsg:(FLTPositionMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)pauseMsg:(FLTTextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setMixWithOthersMsg:(FLTMixWithOthersMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void FLTVideoPlayerApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLTVideoPlayerApi> *_Nullable api);

NS_ASSUME_NONNULL_END
